<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAADwAAAP8AAAD/AAAAOAAAAGMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAANAAAAAAAAAA0AAABgAAAA/wAAAP8AAADrAAAA9AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAFcAAAANAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9AAA
        AO4AAADuAAAA7gAAAO8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAO8AAADuAAAA7gAA
        AO4AAAD0AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAvgAA
        ACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAsAAAAvwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AL0AAAACAAAAAAAAAAgAAAARAAAAEQAAABEAAAAUAAAAigAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AIgAAAAUAAAAEQAAABEAAAARAAAACAAAAAAAAAACAAAAvwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAKwAAAAAAAAB9AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAAfAAAAAAAAAAsAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPIAAAAAAAAACgAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAACgAAAAAAAADzAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA6wAAAAAAAAAWAAAA/wAAAP8AAACVAAAAJgAAACIAAAAiAAAAIgAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACYAAACWAAAA/wAAAP8AAAAWAAAAAAAA
        AOsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADrAAAAAAAAABYAAAD/AAAA/wAAACkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkAAAD/AAAA/wAA
        ABYAAAAAAAAA6wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOsAAAAAAAAAFgAAAP8AAAD/AAAAJgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAA
        AP8AAAD/AAAAFgAAAAAAAADrAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA6wAAAAAAAAAWAAAA/wAA
        AP8AAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAmAAAA/wAAAP8AAAAWAAAAAAAAAOsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADrAAAAAAAA
        ABYAAAD/AAAA/wAAACYAAAAAAAAAdAAAAOcAAADHAAAAGwAAAJkAAAB1AAAAAAAAAAAAAAAdAAAAywAA
        AOoAAAB1AAAAAAAAACYAAAD/AAAA/wAAABYAAAAAAAAA6wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOsAAAAAAAAAFgAAAP8AAAD/AAAAJgAAAAQAAAD6AAAAaQAAAMIAAAB9AAAAsAAAAIYAAAAAAAAAAAAA
        AH8AAADOAAAAWgAAAPkAAAAEAAAAJgAAAP8AAAD/AAAAFgAAAAAAAADrAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA6wAAAAAAAAAWAAAA/wAAAP8AAAAmAAAAEQAAAP8AAAAnAAAAlQAAAJAAAACwAAAAhgAA
        AAAAAAAAAAAAkAAAAKYAAAAWAAAA/wAAABEAAAAmAAAA/wAAAP8AAAAWAAAAAAAAAOsAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADrAAAAAAAAABYAAAD/AAAA/wAAACYAAAARAAAA/wAAACcAAAAAAAAAAAAA
        ALAAAAD3AAAA4wAAAFgAAACQAAAApgAAABYAAAD/AAAAEQAAACYAAAD/AAAA/wAAABYAAAAAAAAA6wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOsAAAAAAAAAFgAAAP8AAAD/AAAAJgAAABEAAAD/AAAAJwAA
        AAAAAAAAAAAAsAAAAJcAAACBAAAA2QAAAJAAAACmAAAAFgAAAP8AAAARAAAAJgAAAP8AAAD/AAAAFgAA
        AAAAAADrAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA6wAAAAAAAAAWAAAA/wAAAP8AAAAmAAAAEQAA
        AP8AAAAnAAAAbgAAAGoAAACwAAAAhgAAAEwAAADrAAAAkAAAAKYAAAAWAAAA/wAAABEAAAAmAAAA/wAA
        AP8AAAAWAAAAAAAAAOsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADrAAAAAAAAABYAAAD/AAAA/wAA
        ACYAAAAFAAAA+gAAAGQAAADAAAAAfgAAALAAAACfAAAAjgAAANYAAACQAAAApgAAABYAAAD/AAAAEQAA
        ACYAAAD/AAAA/wAAABYAAAAAAAAA6wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOsAAAAAAAAAFgAA
        AP8AAAD/AAAAJgAAAAAAAAB4AAAA6gAAAMwAAAAdAAAAmQAAAN0AAADRAAAATAAAAH0AAACQAAAAEwAA
        AN0AAAAPAAAAJgAAAP8AAAD/AAAAFgAAAAAAAADrAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA6wAA
        AAAAAAAWAAAA/wAAAP8AAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAmAAAA/wAAAP8AAAAWAAAAAAAAAOsAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADrAAAAAAAAABYAAAD/AAAA/wAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYAAAD/AAAA/wAAABYAAAAAAAAA6wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAOsAAAAAAAAAFgAAAP8AAAD/AAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAP8AAAD/AAAAFgAAAAAAAADrAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA6wAAAAAAAAAWAAAA/wAAAP8AAACTAAAAJgAAACIAAAAiAAAAIgAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACYAAACVAAAA/wAAAP8AAAAWAAAAAAAA
        AOsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADyAAAAAAAAAAoAAAD8AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAA
        AAoAAAAAAAAA8wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAqAAAAAAAAAH4AAAD8AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APwAAAB9AAAAAAAAACwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAALwAAAABAAAAAAAA
        AAgAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAACAAAAAAAAAACAAAAvgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ALwAAAAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAKgAAAL0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADzAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAPMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAPAAAAYgAAAP8AAAD/AAAA7AAAAPQAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABgAAAADwAAAAAAAAAOAAAA/wAAAP8AAAA4AAAAYwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAA0AAAAAgAAAAQAAAAAAAAAAAAAAAAHwD4ACAABABAAAIAgAABAIAAAQCH/+EAh/
        /hAIf/4QCEDCEAgAwBAIAMAQCAwAEAgMABAIAAAQCAAAEAhAABAIf/4QCH/+EAh//hAIAAAQCAAAEAQA
        ACACAABAAf//gAAAAAAAAAAAAAAAAIAAAAE=
</value>
  </data>
</root>